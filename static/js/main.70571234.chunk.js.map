{"version":3,"sources":["media/mincar.jpg","media/Westport.jpg","media/GameNyt.jpg","media/TinkBday.jpg","media/keerti.jpg","media/wed1.jpg","media/wed2.jpg","media/siju.jpg","media/sankran.jpg","media/priti.jpg","const.js","components/Menu.jsx","components/LeftPanel.jsx","components/routes/Home.jsx","components/routes/ArrayComp.jsx","components/routes/NotFound.jsx","components/routes/Photos.jsx","components/RightPanel.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","menus","name","path","Menu","className","map","item","exact","to","LeftPanel","React","Component","Home","ArrayComp","Notfound","Photos","state","data","fetch","then","res","json","console","log","setState","catch","error","this","Fragment","src","sankran","height","width","Westport","TinkBday","mincar","siju","priti","GameNyt","wed1","wed2","wed3","keerti","RightPanel","component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.70571234.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mincar.9be383ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Westport.b6486108.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GameNyt.2d1f8ae7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TinkBday.d64adfab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/keerti.85bcf57a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wed1.d7d231dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wed2.7f7ae0dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/siju.68f78ce1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sankran.f361cb47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/priti.fddfbfb2.jpg\";","export const menus = [\n  {\n    name: \"Home\",\n    path: \"/\"\n  },\n  {\n    name: \"Array\",\n    path: \"/array-comp\"\n  },\n  {\n    name: \"Photos\",\n    path: \"/photos\"\n  }\n];\n","import React, { Fragment } from \"react\";\nimport { menus } from \"../const\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      {menus &&\n        menus.map(item => {\n          return (\n            <NavLink exact to={item.path} className=\"menu-item\">\n              {item.name}\n            </NavLink>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport Menu from \"./Menu\";\n\nclass LeftPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"left-panel\">\n        <div className=\"left-header\">\n          <h3>Menu</h3>\n        </div>\n        <div className=\"left-body\">\n          <Menu />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftPanel;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h3>This is Home Page Yahooooo</h3>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst ArrayComp = () => {\n  return (\n    <div className=\"array-comp\">\n      <h3>This is Array Comp</h3>\n    </div>\n  );\n};\n\nexport default ArrayComp;\n","import React from \"react\";\nconst Notfound = () => <h3>Not found</h3>;\nexport default Notfound;\n","import React from \"react\";\nimport Westport from \"../../media/Westport.jpg\";\nimport GameNyt from \"../../media/GameNyt.jpg\";\nimport TinkBday from \"../../media/TinkBday.jpg\";\nimport mincar from \"../../media/mincar.jpg\";\nimport keerti from \"../../media/keerti.jpg\";\nimport wed1 from \"../../media/wed1.jpg\";\nimport wed2 from \"../../media/wed2.jpg\";\nimport wed3 from \"../../media/mincar.jpg\";\nimport siju from \"../../media/siju.jpg\";\nimport sankran from \"../../media/sankran.jpg\";\nimport priti from \"../../media/priti.jpg\";\n\nclass Photos extends React.Component {\n  state = {\n    data: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://pixabay.com/api/?key=15230169-d49fcfee7075675ba55bcb704&q=sunflower&image_type=photo&pretty=true\"\n    )\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          data: data\n        });\n      })\n      .catch(error => {\n        console.error(\"Something went wrong!\");\n      });\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"photos-container\">\n        {/* {data &&\n          data.hits &&\n          data.hits.map(item => {\n            return <img src={item.previewURL} height=\"200px\" width=\"300px\" />;\n          })} */}\n        <React.Fragment>\n          <img src={sankran} height=\"200px\" width=\"300px\" />\n          <img src={Westport} height=\"200px\" width=\"300px\" />\n          <img src={TinkBday} height=\"200px\" width=\"300px\" />\n          <img src={mincar} height=\"200px\" width=\"300px\" />\n          <img src={siju} height=\"200px\" width=\"300px\" />\n          <img src={priti} height=\"200px\" width=\"300px\" />\n          <img src={GameNyt} height=\"200px\" width=\"300px\" />\n          <img src={wed1} height=\"200px\" width=\"300px\" />\n          <img src={wed2} height=\"200px\" width=\"300px\" />\n          <img src={wed3} height=\"200px\" width=\"300px\" />\n          <img src={keerti} height=\"200px\" width=\"300px\" />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Photos;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"../components/routes/Home\";\nimport ArrayComp from \"./routes/ArrayComp\";\nimport Notfound from \"./routes/NotFound\";\nimport Photos from \"./routes/Photos\";\n\nclass RightPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"right-panel\">\n        <div className=\"right-header\">\n          <h3>Hello</h3>\n        </div>\n        <div className=\"right-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/array-comp\" component={ArrayComp} />\n            <Route path=\"/photos\" component={Photos} />\n            <Route component={Notfound} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RightPanel;\n","import React from \"react\";\n\nconst Footer = () => <div className=\"footer\"></div>;\n\nexport default Footer;\n","import React from \"react\";\nimport LeftPanel from \"./components/LeftPanel\";\nimport RightPanel from \"./components/RightPanel\";\nimport Footer from \"./components/Footer\";\nimport \"./styles/style.scss\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./components/routes/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <LeftPanel />\n        <RightPanel />\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}